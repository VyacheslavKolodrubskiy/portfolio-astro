---
import { twMerge } from 'tailwind-merge'
import type { HTMLAttributes } from 'astro/types'

type Props = HTMLAttributes<'button'>

const { class: classes, ...rest } = Astro.props as Props

interface link {
  name: string
  href: string
}

const links: link[] = [
  {
    name: 'About',
    href: '#about',
  },
  {
    name: 'Latest works',
    href: '#latest-works',
  },
  {
    name: 'Collaborations',
    href: '#collaborations',
  },
]
---

<button
  type="button"
  aria-label="Burger Menu"
  class:list={twMerge('burger-menu w-10 h-10 z-50 space-y-1', classes)}
  {...rest}
>
  {
    Array.from({ length: 2 }).map(() => (
      <div class="burger-menu__line w-full transition-all h-[1px] bg-white" />
    ))
  }
</button>

<nav
  class="nav-menu fixed bg-black invisible z-10 w-full h-full top-0 left-0 transition-all duration-500 -translate-y-full"
>
  <ul
    class="flex px-4 flex-col justify-center h-full text-6xl font-medium tracking-tighter leading-none uppercase text-[clamp(1rem,5vw,20rem)]"
  >
    {
      links.map((link) => (
        <li class="py-5">
          <a
            class="block w-full h-full"
            href={link.href}
          >
            {link.name}
          </a>
        </li>
      ))
    }
  </ul>
</nav>

<script>
  const burgerMenu = document.querySelector('.burger-menu') as HTMLButtonElement
  const navMenu = document.querySelector('.nav-menu') as HTMLUListElement

  burgerMenu?.addEventListener('click', () => {
    burgerMenu.classList.toggle('burger-menu--open')
    navMenu.classList.toggle('nav-menu--open')
  })
</script>

<style>
  .nav-menu--open {
    visibility: visible;
    transform: translateY(0);
  }

  .burger-menu.burger-menu--open > .burger-menu__line:nth-child(1) {
    transform: rotate(45deg) translate(0, 4px);
  }
  .burger-menu.burger-menu--open > .burger-menu__line:nth-child(2) {
    transform: rotate(-45deg) translate(0, -2px);
  }
</style>
